[env]

[tasks.clean]
description = "Clean all exported builds and other cruft"
run = "rm -rf export"

[tasks.deploy-web]
description = "Deploy the web version to void.docwhat.org"
run = "rsync -av --delete-after --progress export/web/ gerf:/srv/website/srv/void/"

[tasks.export-all]
depends = ["export-web", "export-macos", "export-windows", "export-linux"]
description = "Export all platforms to export/"

[tasks.export-linux]
description = "Export the Linux version to export/linux/"
run = """
#!/usr/bin/env bash
set -ex

rm -rf export/linux
mkdir -p export
mkdir export/linux
godot --headless --export-release "Linux" export/linux/void
"""

[tasks.export-macos]
description = "Export the macOS version to export/macos/"
run = """
#!/usr/bin/env bash
set -ex

rm -rf export/macos
mkdir -p export
mkdir export/macos
godot --headless --export-release "macOS" export/macos/Void.app
"""

[tasks.export-web]
description = "Export the web version to export/web/"
run = """
#!/usr/bin/env bash
set -ex

rm -rf export/web
mkdir -p export
mkdir export/web
godot --headless --export-release "Web" export/web/index.html
"""

[tasks.export-windows]
description = "Export the Windows version to export/windows/"
run = """
#!/usr/bin/env bash
set -ex

rm -rf export/windows
mkdir -p export
mkdir export/windows
godot --headless --export-release "Windows Desktop" export/windows/void.exe
"""

[tasks.check]
description = "Run hk check"
run = "hk check"

[tasks.fix]
description = "Run hk fix"
run = "hk fix"

[tasks.game]
description = "Run the game"
run = "godot --path . --print-fps"

[tasks.godot]
description = "Run the Godot editor"
run = "(godot --path . --editor >& /dev/null &)"

[tasks.test]
description = "Run the tests"
run = """
#!/usr/bin/env bash

godot --path . \
--no-header \
--debug \
--script res://addons/gdUnit4/bin/GdUnitCmdTool.gd \
--ignoreHeadlessMode \
--add test
exit_code=$?
echo "Test run ends with exit code $exit_code"

# Run the copy log command
godot --path . \
--no-header \
--headless \
--quiet \
--script res://addons/gdUnit4/bin/GdUnitCopyLog.gd \
--add test > /dev/null

exit $exit_code
"""

[tasks.report]
description = "Show the latest report"
run = """
#!/usr/bin/env bash

n=$(printf "%s\n" -- reports/report_* | sed 's!.*_!!' | sort -n | tail -n1)

if [[ -f "reports/report_$n/index.html" ]]; then
  xdg-open "reports/report_$n/index.html" || open "reports/report_$n/index.html"
else
  echo "No report found"
  exit 1
fi
"""

[tasks.pre-commit]
run = "hk run pre-commit"

[tasks.post-push]
run = "script/bump-version"

[tools]
hk = "1.16.0"
oxipng = "9.1.5"
pkl = "0.29.1"
semver = "3.4.0"
taplo = "0.10.0"
uv = "0.9.3"
yamllint = "1.37.1"
yq = "4.48.1"

[tools."ubi:GDQuest/GDScript-formatter"]
exe = "gdscript-formatter-macos-aarch64"
matching_regex = "gdscript-formatter-macos-aarch64\\.zip"
rename_exe = "gdscript-formatter"
version = "0.14.0"

# This doesn't work. See https://github.com/jdx/mise/discussions/6532
# [tools."github:GDQuest/GDScript-formatter"]
# bin = "gdscript-formatter"
# version = "0.12.0"
